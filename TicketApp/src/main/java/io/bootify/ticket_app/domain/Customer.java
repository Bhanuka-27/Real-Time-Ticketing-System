package io.bootify.ticket_app.domain;

import jakarta.persistence.*;

import java.time.OffsetDateTime;
import java.util.Set;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;


@Entity
@Table(name = "Customers")
@EntityListeners(AuditingEntityListener.class)
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Customer {

    public Customer(String name) {
        this.name = name;
    }

    // Marks this field as the primary key of the entity.
    @Id
    // Indicates the column cannot be null and is not updatable once set.
    @Column(nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    // Specifies that the primary key is auto-generated by the database using an identity column.
    private Long id;

    // Maps this field to a non-nullable column in the database.
    @Column(nullable = false)
    private String name;

    // Defines a one-to-many relationship with the `Ticket` entity.
    @OneToMany(mappedBy = "customerId")
    // Represents the collection of tickets associated with the customer.
    private Set<Ticket> tickets;

    // Stores the total number of tickets the customer has.
    @Column
    private Integer totalTickets;

    // Defines the rate at which the customer retrieves tickets.
    @Column
    private Integer customerRetrievalRate;

    // Defines the maximum number of tickets the customer can hold.
    @Column
    private Integer maxTicketCapacity;

    // Timestamp of when the record was created.
    @CreatedDate
    @Column(nullable = false, updatable = false)
    private OffsetDateTime dateCreated;

    // Timestamp of the last update to the record.
    @LastModifiedDate
    @Column(nullable = false)
    private OffsetDateTime lastUpdated;

}
